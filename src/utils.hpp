glm::vec2 rotated(glm::vec2 point, glm::vec2 center_of_rotation, float angle);
float brightness(glm::vec2 color);
void greenOnly(sil::Image image);
void changeColors(sil::Image image);
void blackAndWhite(sil::Image image);
void negative(sil::Image image);
void gradient();
void mirror(sil::Image image);
void noise(sil::Image image);
void rotation(sil::Image image);
void rgbSplit(sil::Image image);
void lessAndMoreLight(sil::Image image, sil::Image image_bis);
void disk();
void circle();
void rosace();
void mosaic(sil::Image image);
void mirrorMosaic(sil::Image image);
void glitch(sil::Image image);
void fractale();
void vortex(sil::Image image);
void dithering(sil::Image image);
void betterContrast(sil::Image image);
sil::Image blur(sil::Image image, int level);
void applyKernel(std::vector<std::vector<float>> kernel, sil::Image & image, std::string name);
void differenceOfGaussians(sil::Image photo);
void sortPixels(sil::Image image);